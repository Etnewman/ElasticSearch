{
    "description" : "Pipeline for parsing logstash logs",
    "on_failure" : [
      {
        "set" : {
          "value" : "{{ _ingest.on_failure_message }}",
          "field" : "error.message"
        }
      }
    ],
    "processors" : [
      {
        "json" : {
          "field" : "message",
          "target_field" : "logstash.log"
        }
      },
      {
        "convert" : {
          "field" : "logstash.log.timeMillis",
          "type" : "string"
        }
      },
      {
        "date" : {
          "target_field" : "@timestamp",
          "field" : "logstash.log.timeMillis",
          "formats" : [
            "UNIX_MS"
          ]
        }
      },
      {
        "rename" : {
          "field" : "logstash.log.loggerName",
          "target_field" : "logstash.log.module"
        }
      },
      {
        "remove" : {
          "field" : [
            "message",
            "logstash.log.timeMillis"
          ]
        }
      },
      {
        "rename" : {
          "field" : "logstash.log.logEvent.message",
          "target_field" : "message"
        }
      },
      {
        "rename" : {
          "field" : "logstash.log.logEvent",
          "target_field" : "logstash.log.log_event"
        }
      },
      {
        "rename" : {
          "target_field" : "log.level",
          "field" : "logstash.log.level"
        }
      },
      {
        "script" : {
          "source" : "def items = [];\nctx.logstash.log.log_event.action.forEach(v -> {\n    items.add(v.toString());\n});\nctx.logstash.log.log_event.action = items;\n",
          "description" : "Convert logstash.log.log_event.action elements to string.",
          "if" : "ctx?.logstash?.log?.log_event?.action instanceof List",
          "lang" : "painless"
        }
      },
      {
        "set" : {
          "field" : "event.kind",
          "value" : "event"
        }
      },
      {
        "script" : {
          "lang" : "painless",
          "source" : "def errorLevels = [\"ERROR\", \"FATAL\"]; if (ctx?.log?.level != null) {\n  if (errorLevels.contains(ctx.log.level)) {\n    ctx.event.type = \"error\";\n  } else {\n    ctx.event.type = \"info\";\n  }\n}"
        }
      }
    ]
  }
