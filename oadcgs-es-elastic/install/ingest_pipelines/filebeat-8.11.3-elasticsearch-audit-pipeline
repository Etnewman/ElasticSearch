{
    "description" : "Pipeline for parsing elasticsearch audit logs",
    "processors" : [
      {
        "set" : {
          "field" : "event.ingested",
          "value" : "{{_ingest.timestamp}}"
        }
      },
      {
        "set" : {
          "field" : "event.created",
          "copy_from" : "@timestamp"
        }
      },
      {
        "grok" : {
          "field" : "message",
          "patterns" : [
            "^%{CHAR:first_char}"
          ],
          "pattern_definitions" : {
            "CHAR" : "."
          }
        }
      },
      {
        "pipeline" : {
          "if" : "ctx.first_char != '{'",
          "name" : "filebeat-8.11.3-elasticsearch-audit-pipeline-plaintext"
        }
      },
      {
        "pipeline" : {
          "name" : "filebeat-8.11.3-elasticsearch-audit-pipeline-json",
          "if" : "ctx.first_char == '{'"
        }
      },
      {
        "set" : {
          "value" : "event",
          "field" : "event.kind"
        }
      },
      {
        "set" : {
          "field" : "event.category",
          "value" : "database"
        }
      },
      {
        "set" : {
          "field" : "event.type",
          "value" : "access",
          "if" : "ctx?.elasticsearch?.audit?.event_type != null"
        }
      },
      {
        "script" : {
          "source" : "def successEvents = ['authentication_success', 'access_granted', 'run_as_granted', 'connection_granted']; if (ctx?.elasticsearch?.audit?.event_type != null && successEvents.contains(ctx.elasticsearch.audit.event_type)) {\n  ctx.event.outcome = 'success';\n} else {\n  ctx.event.outcome = 'failure';\n} if (ctx?.event.action != null && successEvents.contains(ctx.event.action)) {\n  ctx.event.outcome = 'success';\n} else {\n  ctx.event.outcome = 'failure';\n}",
          "lang" : "painless"
        }
      },
      {
        "set" : {
          "value" : "{{elasticsearch.node.id}}",
          "ignore_empty_value" : true,
          "field" : "host.id"
        }
      },
      {
        "set" : {
          "field" : "host.name",
          "value" : "{{elasticsearch.node.name}}",
          "ignore_empty_value" : true
        }
      },
      {
        "append" : {
          "field" : "related.user",
          "value" : "{{user.name}}",
          "if" : "ctx?.user?.name != null"
        }
      },
      {
        "append" : {
          "field" : "related.user",
          "value" : "{{user.effective.name}}",
          "if" : "ctx?.user?.effective?.name != null"
        }
      },
      {
        "remove" : {
          "field" : "elasticsearch.audit.@timestamp"
        }
      },
      {
        "remove" : {
          "field" : [
            "first_char"
          ]
        }
      }
    ],
    "on_failure" : [
      {
        "set" : {
          "field" : "error.message",
          "value" : "{{ _ingest.on_failure_message }}"
        }
      }
    ]
  }
