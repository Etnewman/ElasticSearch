{"description":"Receive all udp syslog data","pipeline":"input {
  udp {
    port => 5040
    ecs_compatibility => v8
  }
}

filter {

    # Add Orignating Site to document
    mutate {
        add_field => { \"DCGS_Site\" => \"${SITE}\" }
        add_field => { \"DCGS_Site_Name\" => \"${SITELOC}\" }
        add_field => { \"[geo][name]\" => \"${SITELOC}\" }
        add_tag => [ \"syslog_udp\" ]
    }
    translate {
        field => \"DCGS_Site_Name\"
        destination => \"[geo][location]\"
        override => \"true\"
        fallback => \"0,0\"
        dictionary_path => '/etc/logstash/dictionaries/site_coordinates.yml'
    }
    # Add time of ingest to event
    ruby {
        code => '
            event.set(\"[event][ingested]\", Time.now())
        '
    }

    grok {
        match => {
            \"message\" => [
                \"^(?:<(?<[log][syslog][priority]>[0-9]{1,3})>):\\s+(?<ts>[0-9]{4}\\s+[a-zA-Z]{3}\\s+[0-9]{1,2}\\s[0-9]{2}:[0-9]{2}:[0-9]{2} (UTC)):\\s+\\%%{NOTSPACE:[error][type]}:\\s+(?:-|\\[?%{PROG:[process][name]}\\]?) (?:\\[(?<[process][pid]>[0-9]{1,8})\\])\\s+%{GREEDYDATA:payload}\",
                \"^(?:<(?<[log][syslog][priority]>[0-9]{1,3})>):\\s+(?<ts>[0-9]{4}\\s+[a-zA-Z]{3}\\s+[0-9]{1,2}\\s[0-9]{2}:[0-9]{2}:[0-9]{2} (UTC)):\\s+\\%%{NOTSPACE:[error][type]}:\\s+%{GREEDYDATA:payload}\"
            ]
        }
        add_tag => [ \"header_parsed0\" ]
        id => \"parse_header0\"
        tag_on_failure => [ \"malformed\" ]
    }

    if \"UTC\" in [ts] {
        mutate {
            gsub => [ \"ts\", \"UTC\", \"-0000\" ]
        }
    }

    # Fix timestamp
    date {
        match => [ \"ts\", \"MMM dd HH:mm:ss\", \"MMM d HH:mm:ss\", \"MMM  d HH:mm:ss\", \"ISO8601\", \"yyyy MMM d HH:mm:ss Z\" ]
        target => \"@timestamp\"
    }

    # Parse syslog priority code
    if [log][syslog][priority] {
        syslog_pri {
            ecs_compatibility => v8
        }

        mutate {
            copy => { \"[log][syslog][facility][name]\" => \"[log][facility]\" }
            copy => { \"[log][syslog][severity][name]\" => \"[log][level]\" }
            id => \"syslog_field_rename\"
        }

        # Add severity code to event
        if ![event][severity] {
            mutate {
                copy => { \"[log][syslog][severity][code]\" => \"[event][severity]\" }
            }
        }
    }
    else {
        mutate {
            add_tag => [ \"no_syslog_priority\" ]
        }
    }

    mutate {
        rename => { \"payload\" => \"message\" }
        rename => { \"[host][ip]\" => \"[source][ip]\" }
    }

    mutate {
        remove_field => [ \"ts\" ]
    }
}

output {
  elasticsearch {
    hosts => [\"${OUTPUT1}\", \"${OUTPUT2}\", \"${OUTPUT3}\"]
    index => \"dcgs-audits_syslog-iaas-ent-${SITENUM}\"
    user => \"ls_internal\"
    password => \"${LS_INTERNAL_PW}\"
    ssl => true
    cacert => \"/etc/logstash/certs/cachain.pem\"
  }
}","settings":{"pipeline.batch.delay":50,"pipeline.batch.size":125,"pipeline.workers":1,"queue.checkpoint.writes":1024,"queue.max_bytes":"1gb","queue.type":"persisted"}}
